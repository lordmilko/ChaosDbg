<Project Sdk="Microsoft.NET.Sdk">

  <Import Project="$(Build)ClrDebug.props" />
  <Import Project="$(Build)ChaosLib.props" />
  <Import Project="$(Build)PESpy.props" />
  <Import Project="$(Build)SymHelp.props" />
  
  <PropertyGroup>
    <RootNamespace>ChaosDbg</RootNamespace>
    <TargetFramework>net472</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <LangVersion>9.0</LangVersion>

    <!-- Prevent Microsoft.CodeAnalysis from emitting a spew of *.resource.dll files/folders in the output directory -->
    <SatelliteResourceLanguages>en</SatelliteResourceLanguages>
  </PropertyGroup>
  
  <ItemGroup>
    <Compile Remove="Services\Logger\SerilogLogger.cs" />
    <None Include="Services\Logger\SerilogLogger.cs" />
  </ItemGroup>
  
	<ItemGroup>
		<PackageReference Include="Iced" Version="1.20.0" />
		<PackageReference Include="ICSharpCode.Decompiler" Version="8.2.0.7535" />
		<PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="4.9.2" />
		<PackageReference Include="Microsoft.Debugging.Platform.DbgEng" Version="$(DbgEngVersion)" />
		<PackageReference Include="Microsoft.Debugging.Platform.SymSrv" Version="$(DbgEngVersion)" />
    
    <!-- We could include types in the WDK too but I don't think we need that for the moment.
         For now, we won't bother with docs -->
		<!--<PackageReference Include="Microsoft.Windows.SDK.Win32Docs" Version="0.1.42-alpha" />-->
		<PackageReference Include="Microsoft.Windows.SDK.Win32Metadata" Version="54.0.44-preview" />

    <PackageReference Include="Microsoft.Diagnostics.DbgShim" Version="$(DbgShimVersion)" />

    <PackageReference Include="Microsoft.Diagnostics.Tracing.TraceEvent.SupportFiles" Version="$(TraceEventVersion)" ExcludeAssets="compile;runtime" />

    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Management.Automation">
      <HintPath>C:\Program Files (x86)\Reference Assemblies\Microsoft\WindowsPowerShell\3.0\System.Management.Automation.dll</HintPath>

      <!-- This tag actually seems to be whether to copy the reference to the output directory -->
      <Private>false</Private>
    </Reference>

    <PackageReference Include="Microsoft.CodeAnalysis.BannedApiAnalyzers" Version="$(BannedApiAnalyzersVersion)">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
	</ItemGroup>

  <!-- We only want to copy native assemblies to the output directory when we're not building single file. During single file
       builds, we'll directly copy these into our "lib" folder, as the list of files that will be copied to the output directory
       doesn't seem to be known until after the build -->
  <ItemGroup Condition="'$(SingleFile)' == 'false'">
    <!-- Copy DbgEng related assemblies to the output directory. This technique ensures that assemblies are
         copied to the output directories of any projects that depend on ChaosDbg.Engine as well (which
         a <Copy /> task wouldn't do) -->
    <None Include="$(MicrosoftDebuggingPlatformDbgEngContent)x86\dbgeng.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x86\%(FileName)%(Extension)" />
    <None Include="$(MicrosoftDebuggingPlatformDbgEngContent)x86\dbghelp.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x86\%(FileName)%(Extension)" />
    <None Include="$(MicrosoftDebuggingPlatformSymSrvContent)x86\symsrv.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x86\%(FileName)%(Extension)" />

    <None Include="$(MicrosoftDebuggingPlatformDbgEngContent)amd64\dbgeng.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x64\%(FileName)%(Extension)" />
    <None Include="$(MicrosoftDebuggingPlatformDbgEngContent)amd64\dbghelp.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x64\%(FileName)%(Extension)" />
    <None Include="$(MicrosoftDebuggingPlatformSymSrvContent)amd64\symsrv.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x64\%(FileName)%(Extension)" />

    <!-- Copy DbgShim -->
    <None Include="$(NuGetPackageRoot)Microsoft.Diagnostics.DbgShim.win-x86\$(DbgShimVersion)\runtimes\win-x86\native\dbgshim.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x86\%(FileName)%(Extension)" />
    <None Include="$(NuGetPackageRoot)Microsoft.Diagnostics.DbgShim.win-x64\$(DbgShimVersion)\runtimes\win-x64\native\dbgshim.dll" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="x64\%(FileName)%(Extension)" />

    <!-- Copy the winmd metadata file -->
    <None Include="@(ProjectionMetadataWinmd->'%(FullPath)')" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="winmd\%(FileName)%(Extension)" />
    <!--<None Include="@(ProjectionDocs->'%(FullPath)')" CopyToOutputDirectory="PreserveNewest" Visible="False" Link="winmd\%(FileName)%(Extension)" />-->
  </ItemGroup>
  <ItemGroup>
    <Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
  </ItemGroup>
  <ItemGroup>
    <None Update="ChaosDbg.Format.ps1xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="ChaosDbg.psd1">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
    <None Update="ChaosDbg.Types.ps1xml">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

</Project>
