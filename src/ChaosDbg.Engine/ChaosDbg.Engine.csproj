<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net472</TargetFramework>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

    <GeneratedViewModelsPath>$(MSBuildProjectDirectory)\ViewModel\ViewModels.g.cs</GeneratedViewModelsPath>
    
    <ChaosDbgMSBuildProjectPath>$(MSBuildProjectDirectory)\..\Tools\ChaosDbg.MSBuild</ChaosDbgMSBuildProjectPath>
    <ChaosDbgMSBuildOutputPath>$(ChaosDbgMSBuildProjectPath)\bin\$(Configuration)\ChaosDbg.MSBuild.dll</ChaosDbgMSBuildOutputPath>
  </PropertyGroup>

	<ItemGroup>
		<!-- If ClrDebug has been cloned to the parent directory containing both ClrDebug and DebugTools,
         prefer the local version for development purposes -->
		<PackageReference Include="ClrDebug" Version="$(ClrDebugVersion)" Condition="!Exists('$(LocalClrDebug)')" />

		<Reference Include="ClrDebug" Condition="Exists('$(LocalClrDebug)')">
			<HintPath>$(LocalClrDebug)</HintPath>
		</Reference>
    <Compile Remove="$(GeneratedViewModelsPath)" />
    <Compile Include="$(GeneratedViewModelsPath)" Condition="Exists($(GeneratedViewModelsPath))" Visible="false" />
	</ItemGroup>

  <!-- The assembly won't actually be loaded until its needed; thus if we need to compile it, MSBuild won't complain that it doesn't exist here -->
  <UsingTask TaskName="GenerateViewModels" AssemblyFile="$(ChaosDbgMSBuildOutputPath)" />

  <!-- Compile ChaosDbg.MSBuild (if it doesn't exist) and generate our custom view models -->
  <Target Name="GenerateViewModels" BeforeTargets="CoreCompile">
    <Exec Command="dotnet build $(ChaosDbgMSBuildProjectPath) -c $(Configuration)" Condition="!Exists($(ChaosDbgMSBuildOutputPath))" />
    <ItemGroup>
      <ViewModelFiles Include="$(MSBuildProjectDirectory)\ViewModel\**\*.cs" />
    </ItemGroup>
    <GenerateViewModels Files="@(ViewModelFiles)" Output="$(GeneratedViewModelsPath)" />
    <ItemGroup Condition="Exists($(GeneratedViewModelsPath))">
      <Compile Remove="$(GeneratedViewModelsPath)" />
      <Compile Include="$(GeneratedViewModelsPath)" Visible="false" />
    </ItemGroup>
  </Target>

</Project>
